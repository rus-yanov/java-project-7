plugins {
	id 'application'
	id 'checkstyle'
	id 'jacoco'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.adarshr.test-logger' version '2.1.1'
	id 'com.github.ben-manes.versions' version '0.38.0'
	id 'org.liquibase.gradle' version '2.2.0'
	// Плагины для openapi
	id 'com.github.johnrengelman.processes' version '0.5.0'
	id 'org.springdoc.openapi-gradle-plugin' version '1.3.3'
	// Сборщик фронтенда
	id 'org.siouan.frontend-jdk11' version '6.0.0'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'


application {
	mainClass = 'hexlet.code.AppApplication'
}

repositories {
	mavenCentral()
}

wrapper {
	gradleVersion = '7.4.2'
	distributionType = Wrapper.DistributionType.ALL
}

compileJava {
	options.release = 17
	options.encoding = 'UTF-8'
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor(
			'org.projectlombok:lombok:1.18.22',
			'com.querydsl:querydsl-apt:5.0.0:jpa',
			'javax.annotation:javax.annotation-api:1.3.2',
			'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
	)

	implementation(
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-actuator',
			'org.springframework.boot:spring-boot-starter-validation',
			'org.springframework.boot:spring-boot-starter-security',
			'io.jsonwebtoken:jjwt:0.9.1',
			// Зависимость для swagger
			// Позволяет сгенерировать и проматривать интерактивную документацию по API
			'org.springdoc:springdoc-openapi-ui:1.7.0',
			'org.liquibase:liquibase-core',
			'com.querydsl:querydsl-core:5.0.0',
			'com.querydsl:querydsl-jpa:5.0.0',
			'com.rollbar:rollbar-spring-boot-webmvc:1.10.0'
	)

	liquibaseRuntime(
			sourceSets.main.output,
			'org.liquibase:liquibase-core:4.8.0',
			'org.liquibase.ext:liquibase-hibernate5:4.5.0',
			'org.springframework.boot:spring-boot-starter-data-jpa',

	)

	runtimeOnly (
			'com.h2database:h2',
			'org.postgresql:postgresql:42.6.0'
	)

	testImplementation(
			'org.springframework.boot:spring-boot-starter-security',
			'org.springframework.security:spring-security-test',
			'org.springframework.boot:spring-boot-starter-test',
			'com.tobedevoured.modelcitizen:spring:0.8.3',
			'org.assertj:assertj-core:3.11.1'
	)
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

tasks.named('test') {
	useJUnitPlatform()
}

// Таска для деплоя
task stage(dependsOn: [clean, installDist])
installDist.mustRunAfter clean
